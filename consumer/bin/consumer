#!/usr/bin/env node

const util = require('./../src/helpers/util');
const Bugsnag = require('@bugsnag/js');

// Temporary hack to silence warnings.
const silenceDeprecation = function (fn) {
  return function (msg) {
    if (msg.includes("Deprecation Notice")) {
      return;
    }

    return fn(msg);
  }
}
console.warn = silenceDeprecation(console.warn)
console.error = silenceDeprecation(console.error)

// set up bugsnag
Bugsnag.start({ apiKey: process.env.BUGSNAG_API_KEY })

const run = async function(fn, sleep = 0) {
  let shutdown = false;

  process.on('SIGINT', function() {
    util.log.info('Shutting down...');
    shutdown = true;
  });

  while (!shutdown) {
    try {
      await fn();
    } catch (e) {
      console.error(e)
      Bugsnag.notify(e)
      process.exit(1)
    }

    if (sleep > 0) {
      util.log.info(`Sleeping for ${sleep}ms...`);
      await util.sleep(sleep);
    }
  }

  process.exit(1)
};

const args = process.argv.slice(2);

switch (args[0]) {
  case 'listen': {
    return run(require("./../src/listener")(), 2000);
  }
  case 'fetch': {
    return run(require("./../src/fetcher")(args[1]), 500);
  }
  case 'record': {
    return run(require("./../src/recorder")(), 0);
  }
}
